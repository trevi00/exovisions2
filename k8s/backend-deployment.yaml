apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: exoplanet
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/YOUR_GITHUB_USERNAME/exovisions2/backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
          env:
            # Database URL (constructed from secrets and config)
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: exoplanet-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: exoplanet-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: exoplanet-config
                  key: POSTGRES_DB
            - name: DATABASE_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@database:5432/$(POSTGRES_DB)"

            # Application config
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: exoplanet-config
                  key: DEBUG
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: exoplanet-config
                  key: HOST
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: exoplanet-config
                  key: PORT
            - name: ALLOWED_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: exoplanet-config
                  key: ALLOWED_ORIGINS

            # ML Model paths
            - name: MODEL_PATH
              valueFrom:
                configMapKeyRef:
                  name: exoplanet-config
                  key: MODEL_PATH
            - name: SCALER_PATH
              valueFrom:
                configMapKeyRef:
                  name: exoplanet-config
                  key: SCALER_PATH

          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: exoplanet
  labels:
    app: backend
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: backend
